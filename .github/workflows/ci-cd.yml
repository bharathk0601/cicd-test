name: Validate Commits

on:
  pull_request:
    branches:
      - main

jobs:
  validate-commits:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Ensure the full history is fetched for comparing commits

    - name: Validate commit messages
      run: |
        # Get the list of commits in the pull request
        base_sha=${{ github.event.pull_request.base.sha }}
        head_sha=${{ github.event.pull_request.head.sha }}

        echo "Base SHA: $base_sha"
        echo "Head SHA: $head_sha"

        # Fetch all history so we can check commits between base and head
        git fetch origin $base_sha $head_sha --no-tags

        commits=$(git log --format="%H" $base_sha..$head_sha)
        
        # Initialize a flag to track validation status
        valid_commits=true
        
        # Loop through each commit and validate the message
        for commit in $commits; do
           echo "Commit $commit does not contain a JIRA IDDDDDD."
          commit_message=$(git log -1 --pretty=%B $commit)
          
          # Check if the commit message contains a JIRA ID (example: JIRA-123)
          if ! echo "$commit_message" | grep -E "JIRA-[0-9]+"; then
            echo "Commit $commit does not contain a JIRA ID."
            valid_commits=false
          fi
        done
        
        # Fail the job if any commit message is invalid
        if [ "$valid_commits" = false ]; then
          exit 1
        fi
